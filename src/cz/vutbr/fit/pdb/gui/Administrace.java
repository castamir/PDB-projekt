package cz.vutbr.fit.pdb.gui;

import cz.vutbr.fit.pdb.application.InvalidCredentialsException;
import cz.vutbr.fit.pdb.application.ServiceLocator;
import cz.vutbr.fit.pdb.config.Loader;
import cz.vutbr.fit.pdb.models.ReloadDatabaseModel;
import cz.vutbr.fit.pdb.security.IIdentity;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

/**
 *
 * @author castamir
 */
public class Administrace extends javax.swing.JPanel {

    private MainWindow mainWindow;

    /**
     * Creates new form Administrace
     */
    public Administrace() {
        initComponents();
        reset_database_spinner.setVisible(false);
        if (!Loader.existsLocalConfig()) {
            logout_button.setEnabled(false);
            reset_database_button.setEnabled(false);
        }
    }

    /**
     *
     * @param mainWindow
     */
    public void setMainWindow(MainWindow mainWindow) {
        this.mainWindow = mainWindow;
    }

    /**
     *
     * @return
     */
    public String getIdentityName() {
        IIdentity identity = ServiceLocator.getAuthenticator().getIdentity();
        if (identity.isLoggendIn()) {
            return identity.getUsername();
        } else {
            if (ReloadDatabaseModel.isConnectionValid()) {
                return "Host";
            } else {
                return "Nepřihlášen";
            }
        }
    }

    /**
     *
     */
    public void updateIdentityNameLabel() {
        identity_label.setText(getIdentityName());
    }

    class BackgroundWorker extends SwingWorker<String, Integer> {

        protected void done() {
            try {
                //jLabel1.setVisible(false);
                login_button.setEnabled(true);
                logout_button.setEnabled(true);
                reset_database_spinner.setVisible(false);
                mainWindow.setPanelVisibility(true);
                mainWindow.checkPanelAvailability();
                JOptionPane.showMessageDialog(getParent(), get());
            } catch (InterruptedException | ExecutionException | HeadlessException ex) {
                Logger.getLogger(Administrace.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        @Override
        protected String doInBackground() throws Exception {
            reset_database_spinner.setVisible(true);
            // Do a time-consuming task.
            try {
                ReloadDatabaseModel.resetDatabase();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(getParent(), ex.getMessage(), "Reset databáze se nezdařil", JOptionPane.ERROR_MESSAGE);
            }
            return "Reset databáze je dokončen!";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username_label = new javax.swing.JLabel();
        username_input = new javax.swing.JTextField();
        password_label = new javax.swing.JLabel();
        password_input = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        identity_label = new javax.swing.JLabel();
        login_button = new javax.swing.JButton();
        logout_button = new javax.swing.JButton();
        reset_database_button = new javax.swing.JButton();
        reset_database_spinner = new javax.swing.JLabel();
        helpBtn = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(923, 665));
        setPreferredSize(new java.awt.Dimension(923, 665));

        username_label.setText("Uživatelské jméno");

        username_input.setText("login");
        username_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                username_inputFocusGained(evt);
            }
        });

        password_label.setText("Heslo");

        password_input.setText("jPasswor");
        password_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password_inputFocusGained(evt);
            }
        });

        jLabel3.setText("Přihlášen jako");

        identity_label.setText(getIdentityName());

        login_button.setText("Přihlásit");
        login_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_buttonActionPerformed(evt);
            }
        });

        logout_button.setText("Přihlásit jako host");
        logout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_buttonActionPerformed(evt);
            }
        });

        reset_database_button.setText("Reset databáze");
        reset_database_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_database_buttonActionPerformed(evt);
            }
        });

        reset_database_spinner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/throbber.gif"))); // NOI18N
        reset_database_spinner.setText("probíhá reset databáze...");

        helpBtn.setText("Nápověda");
        helpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username_label)
                            .addComponent(password_label)
                            .addComponent(jLabel3)
                            .addComponent(helpBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username_input, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(password_input, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(identity_label))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(reset_database_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(logout_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(login_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(reset_database_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username_label)
                    .addComponent(username_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_label)
                    .addComponent(login_button)
                    .addComponent(password_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout_button)
                    .addComponent(jLabel3)
                    .addComponent(identity_label))
                .addGap(18, 18, 18)
                .addComponent(reset_database_button)
                .addGap(63, 63, 63)
                .addComponent(helpBtn)
                .addGap(23, 23, 23)
                .addComponent(reset_database_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(304, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reset_database_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_database_buttonActionPerformed
        //reset_database_spinner.setVisible(true);
        mainWindow.setPanelVisibility(false);
        int dialogResult = JOptionPane.showConfirmDialog(getParent(), "Opravdu si přejete resetovat databázi?", "Varování", JOptionPane.OK_CANCEL_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            login_button.setEnabled(false);
            logout_button.setEnabled(false);

            /*try {
             ReloadDatabaseModel.resetDatabase();
             } catch (SQLException ex) {
             JOptionPane.showMessageDialog(getParent(), ex.getMessage(), "Reset databáze se nezdařil", JOptionPane.ERROR_MESSAGE);
             }*/
            new BackgroundWorker().execute();
        } else {
            logout_button.setEnabled(true);
            if (Loader.existsLocalConfig()) {
                login_button.setEnabled(true);
            }
            //reset_database_spinner.setVisible(false);
            mainWindow.setPanelVisibility(true);
        }
        reset_database_spinner.setVisible(false);
        //mainWindow.checkPanelAvailability();
    }//GEN-LAST:event_reset_database_buttonActionPerformed

    private void login_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_buttonActionPerformed
        String username = username_input.getText();
        String password = new String(password_input.getPassword());

        try {
            ServiceLocator.getAuthenticator().login(username, password);
            logout_button.setEnabled(true);
            reset_database_button.setEnabled(true);
        } catch (InvalidCredentialsException ex) {
            JOptionPane.showMessageDialog(getParent(), ex.getMessage(), "Přihlášení se nezdařilo", JOptionPane.ERROR_MESSAGE);
        }

        updateIdentityNameLabel();
        password_input.setText("");
        username_input.setText("");
        mainWindow.checkPanelAvailability();
    }//GEN-LAST:event_login_buttonActionPerformed

    private void logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_buttonActionPerformed
        ServiceLocator.getAuthenticator().logout();
        updateIdentityNameLabel();
        mainWindow.checkPanelAvailability();
    }//GEN-LAST:event_logout_buttonActionPerformed

    private void username_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_username_inputFocusGained
        username_input.setText("");
    }//GEN-LAST:event_username_inputFocusGained

    private void password_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_inputFocusGained
        password_input.setText("");
    }//GEN-LAST:event_password_inputFocusGained

    private void helpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBtnActionPerformed
        
        try {
            java.awt.Desktop.getDesktop().open(new File("./doku/pdb.pdf"));
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(getParent(), "Soubor s nápovědou s nepodařilo otevřít.");
        }
    }//GEN-LAST:event_helpBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton helpBtn;
    private javax.swing.JLabel identity_label;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton login_button;
    private javax.swing.JButton logout_button;
    private javax.swing.JPasswordField password_input;
    private javax.swing.JLabel password_label;
    private javax.swing.JButton reset_database_button;
    private javax.swing.JLabel reset_database_spinner;
    private javax.swing.JTextField username_input;
    private javax.swing.JLabel username_label;
    // End of variables declaration//GEN-END:variables
}
